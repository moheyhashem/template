ext.deps = [:]
def versions = [:]
versions.android_gradle_plugin = '3.4.0'
versions.androidx_support = "1.0.0"
versions.androidx_architecture_components = "2.1.0-alpha02"
versions.androidx_test="1.1.0"
versions.androidx_espresso = "3.1.0-alpha1"
versions.androidx_ktx = "1.0.1"
versions.androidx_navigation = "2.1.0-alpha03"
versions.androidx_constraint_layout = "1.1.3"
versions.dagger = "2.22.1"
versions.junit = "4.12"
versions.retrofit = "2.5.0"
versions.okhttp_logging_interceptor = "3.14.0"
versions.mockwebserver = "3.14.1"
versions.apache_commons = "2.6"
versions.mockito = "2.27.0"
versions.mockito_all = "1.10.19"
versions.dexmaker = "2.25.0"
versions.glide = "4.9.0"
versions.timber = "4.7.1"
versions.rxjava2 = "2.2.8"
versions.rx_android = "2.1.1"
versions.atsl_runner = "1.1.1"
versions.atsl_rules = "1.1.1"
versions.hamcrest = "2.1"
versions.kotlin = "1.3.31"
versions.paging = "2.1.0"
versions.facebook = '5.0.0'
versions.firebase_core = "16.0.9"
versions.firebase_messaging = "18.0.0"
versions.gms = "4.2.0"
versions.indicator = "1.0.3"
versions.detekt = "1.0.0-RC14"
versions.workmanager = "2.1.0-alpha01"
//versions.navigation = "1.0.0-alpha09"
//versions.kotlinx = "0.2.0"
def deps = [:]

def support = [:]
support.app_compat = "androidx.appcompat:appcompat:$versions.androidx_support"
support.recyclerview = "androidx.recyclerview:recyclerview:$versions.androidx_support"
support.cardview = "androidx.cardview:cardview:$versions.androidx_support"
support.design = "com.google.android.material:material:$versions.androidx_support"
support.annotations = "androidx.annotation:annotation:$versions.androidx_support"
support.v4 = "androidx.legacy:legacy-support-v4:$versions.androidx_support"
support.core_utils = "androidx.legacy:legacy-support-core-utils:$versions.androidx_support"
deps.support = support

def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.androidx_architecture_components"
room.compiler = "androidx.room:room-compiler:$versions.androidx_architecture_components"
room.rxjava2 = "androidx.room:room-rxjava2:$versions.androidx_architecture_components"
room.testing = "androidx.room:room-testing:$versions.androidx_architecture_components"
deps.room = room

def lifecycle = [:]
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime:$versions.androidx_architecture_components"
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.androidx_architecture_components"
lifecycle.java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.androidx_architecture_components"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.androidx_architecture_components"
deps.lifecycle = lifecycle

def arch_core = [:]
arch_core.common = "androidx.arch.core:core-common:$versions.androidx_architecture_components"
arch_core.runtime = "androidx.arch.core:core-runtime:$versions.androidx_architecture_components"
arch_core.testing = "androidx.arch.core:core-testing:$versions.androidx_architecture_components"
deps.arch_core = arch_core

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.adapter = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
deps.retrofit = retrofit
deps.okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:${versions.okhttp_logging_interceptor}"

def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_processor = "com.google.dagger:dagger-android-processor:$versions.dagger"
deps.dagger = dagger

def espresso = [:]
espresso.core = "androidx.test.espresso:espresso-core:$versions.androidx_espresso"
espresso.contrib = "androidx.test.espresso:espresso-contrib:$versions.androidx_espresso"
espresso.intents = "androidx.test.espresso:espresso-intents:$versions.androidx_espresso"
espresso.accessibility = "androidx.test.espresso:espresso-accessibility:$versions.androidx_espresso"
espresso.web = "androidx.test.espresso:espresso-web:$versions.androidx_espresso"
espresso.idling_resource = "androidx.test.espresso:espresso-idling-resource:$versions.androidx_espresso"
espresso.idling_concurrent = "androidx.test.espresso.idling:idling-concurrent:$versions.androidx_espresso"
deps.espresso = espresso

def mockito = [:]
mockito.core = "org.mockito:mockito-core:$versions.mockito"
mockito.all = "org.mockito:mockito-all:$versions.mockito_all"
deps.mockito = mockito

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"
kotlin.android_extensions = "org.jetbrains.kotlin:kotlin-android-extensions:$versions.kotlin"
deps.kotlin = kotlin

def ktx = [:]
ktx.core_ktx = "androidx.core:core-ktx:$versions.androidx_ktx"
ktx.fragment_ktx = "androidx.fragment:fragment-ktx:$versions.androidx_ktx"
ktx.Palette_ktx = "androidx.palette:palette-ktx:$versions.androidx_ktx"
ktx.sqllite_ktx = "androidx.sqlite:sqlite-ktx:$versions.android_ktx"
ktx.collection_ktx = "androidx.collection:collection-ktx:$versions.android_ktx"
ktx.viewmodel_ktx = "androidx.lifecycle:viemodel-ktx:$versions.android_ktx"
ktx.reactive_streams_ktx = "androidx.lifecycle:lifecycle-reactivestreams-ktx:$versions.android_ktx"
deps.ktx = ktx

def testing = [:]
testing.test_core = "androidx.test:core:$versions.androidx_test"
testing.test_runner = "androidx.test:runner:$versions.androidx_test"
testing.test_rules = "androidx.test:rules:$versions.androidx_test"
testing.test_ext_junit = "androidx.test.ext:junit:$versions.androidx_test"
testing.test_ext_truth = "androidx.test.ext:truth:$versions.androidx_test"
deps.testing = testing

def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
deps.glide = glide

def build_versions = [:]
build_versions.min_sdk = 19
build_versions.target_sdk = 28
build_versions.build_tools = "28.0.3"
ext.build_versions = build_versions

def workmanager = [:]
workmanager.runtime = "androidx.work:work-runtime-ktx:$versions.workmanager"
workmanager.rxjava2 = "androidx.work:work-rxjava2:$versions.workmanager"
workmanager.testing = "androidx.work:work-testing:$versions.workmanager"
deps.workmanager = workmanager

def navigation = [:]
navigation.navigation_fragment = "androidx.navigation:navigation-fragment-ktx:$versions.androidx_navigation"
navigation.ui = "androidx.navigation:navigation-ui-ktx:$versions.androidx_navigation"
navigation.runtime = "androidx.navigation:navigation-runtime-ktx:$versions.androidx_navigation"
navigation.safe_args_plugin = "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.androidx_navigation"
/*navigation.runtime = "android.arch.navigation:navigation-runtime:$versions.navigation"
navigation.testing = "android.arch.navigation:navigation-testing:1.0.0"*/
deps.navigation = navigation

def firebase = [:]
firebase.core = "com.google.firebase:firebase-core:$versions.firebase_core"
firebase.messaging = "com.google.firebase:firebase-messaging:$versions.firebase_messaging"
deps.firebase = firebase

def paging = [:]
paging.runtime = "androidx.paging:paging-runtime:$versions.paging"
paging.rxjava2 = "androidx.paging:paging-rxjava2:$versions.paging"
deps.paging = paging

deps.dexmaker = "com.linkedin.dexmaker:dexmaker-mockito:$versions.dexmaker"
deps.constraint_layout = "androidx.constraintlayout:constraintlayout:$versions.androidx_constraint_layout"
deps.timber = "com.jakewharton.timber:timber:$versions.timber"
deps.junit = "junit:junit:$versions.junit"
deps.mock_web_server = "com.squareup.okhttp3:mockwebserver:$versions.mockwebserver"
deps.rxjava2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
deps.rx_android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"
deps.hamcrest = "org.hamcrest:hamcrest-library:$versions.hamcrest"
deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
deps.facebook = "com.facebook.android:facebook-android-sdk:$versions.facebook"
deps.gms = "com.google.gms:google-services:$versions.gms"
deps.detekt = "$versions.detekt"
deps.viewpager_indicator = "com.romandanylyk:pageindicatorview:$versions.indicator"
/*def kotlinx = "org.jetbrains.kotlin:kotlin-android-extensions:$versions.kotlinx"
deps.kotlinx = kotlinx*/
ext.deps = deps

def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

ext.addRepos = this.&addRepos